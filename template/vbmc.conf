# vbmc.conf
# A configuration file for lanserv or ipmi_sim to configure the various
# communication parameters for the device.

# This is a name used to identify this instance, and used to create
# the default name of the emulator startup command file and eventually
# the storage facility for permanent storage.
name {{vbmc_name}}

#
# Work on the BMC first
set_working_mc 0x20

  # Define a LAN channel
  startlan {{lan_channel}}
    # Define an IP address and port to listen on.  You can define more
    # than one address/port to listen on multiple addresses.  The ::
    # listens on all addresses.
    {% if intf_not_exists or intf_no_ip %}#{% endif %} addr {{ipmi_listen_range}} {{port_iol}}

    # Maximum privilege limit on the channel.
    priv_limit admin

    # Allowed IPMI 1.5 authorization types
    allowed_auths_callback none md2 md5 straight
    allowed_auths_user none md2 md5 straight
    allowed_auths_operator none md2 md5 straight
    allowed_auths_admin none md2 md5 straight

    # guid for IPMI 2.0 authorization  You can also use a string
    guid a123456789abcdefa123456789abcdef
    #guid "I_AM_A_REAL_BMC!"

    # You can specify a BMC key for IPMI 2.0 authorization.  See the
    # spec for details.
    #bmc_key "abcdefghijklmnopqrst"

    # A program to get and set the LAN configuration of the interface.
    {% if intf_not_exists %}#{% endif %} lan_config_program "{{lan_control_script}} {{lan_interface}}"
  endlan

  chassis_control "{{chassis_control_script}} 0x20"

  # nvram file is only used in GEM mode.
  {% if not gem_enable %}#{% endif %}nvram_file "{{workspace}}/data/nvram.bin"

  # Define a serial VM inteface for channel 15 (the system interface) on
  # port {{port_qemu_ipmi}}, just available to the local system (localhost).
  serial kcs 0.0.0.0 {{port_qemu_ipmi}} codec VM ipmb 0x20

  # startcmd is what to execute to start a VM associated with the
  # codec above (localhost {{port_qemu_ipmi}}).  It also starts a console serial port
  # as the monitor interface.

  startcmd "{{startcmd_script}}"

  # oem_file_path is the place to store the nvme related data for oem command.
  {% if not gem_enable %}#{% endif %} workspace "{{workspace}}"

  # Set up telnet session for ipmi simulator on port {{port_ipmi_console}}
  console 0.0.0.0 {{port_ipmi_console}}

  # Start startcmd at startup?  Default is false.
  startnow {{startnow}}

  # The amount of time to wait for the startcmd to do a graceful shutdown
  # on a powerdown request.  The simulator will send a request to the
  # target, wait this amount of time, and then do a SIGTERM kill on the
  # process.  If this is zero, a SIGTERM will not be done (nor will a SIGKILL).
  # Note that if the simulator does not have a connection to the VM, the
  # graceful shutdown is skipped and a SIGTERM is done immediately.
  # Default time is 60 seconds.
  poweroff_wait {{poweroff_wait}}

  # The amount of time to wait for SIGTERM to kill the process.  If the process
  # does not terminate in this period of time, send a SIGKILL kill.  If this
  # is zero, don't send the SIGKILL.  Default time is 20 seconds.
  kill_wait {{kill_wait}}

  # Now add some users.  User 0 is invalid, user 1 is the special "anonymous"
  # user and cannot take a username.  Note that the users here are only
  # used if the persistent user config doesn't exist.
  #    # valid name    passw      priv-lim max-sess allowed-auths
  user 1 true  ""      "test"     user     10       none md2 md5 straight
  user 2 true  "{{username}}" "{{password}}" admin    10       none md2 md5 straight
  {% if peers %}
  {% for peer in peers %}
  # peer BMC({{peer.addr}}) information
  peer {{peer.addr}} {{peer.interface}} {{peer.user}} {{peer.password}} {{peer.host}}
  {% endfor %}
  {% endif %}
  {% if sol_enabled %}
  sol "{{sol_device}}" 115200 history=4000 historyfru={{historyfru}}
  {% endif %}
